#include <iostream>
#include <vector>
#include <ctime>
#include <cstdlib>

using namespace std;

// Función para simular la infección (enfoque pull-push)
void simulateInfection(int n) {
    // Inicializamos un vector de nodos (0 = sano, 1 = infectado)
    vector<int> nodes(n, 0);

    // Elegimos un nodo infectado al azar
    int infectedNode = rand() % n;
    nodes[infectedNode] = 1;

    // Simulamos la propagación de la infección
    while (true) {
        // Enfoque pull: elegimos un nodo sano al azar
        int healthyNode = rand() % n;
        if (nodes[healthyNode] == 0) {
            // Infectamos el nodo sano
            nodes[healthyNode] = 1;
            cout << "Nodo " << healthyNode << " se infecto (pull)." << endl;
            break;
        }
    }

    // Enfoque push: infectamos los nodos vecinos del nodo inicialmente infectado
    for (int i = 0; i < n; ++i) {
        if (nodes[i] == 1) {
            // Infectamos los nodos vecinos (push)
            for (int j = 0; j < n; ++j) {
                if (nodes[j] == 0) {
                    nodes[j] = 1;
                    cout << "Nodo " << j << " se infecto (push)." << endl;
                }
            }
        }
    }
}

int main() {
    // Definimos el número de nodos
    int n = 100;

    // Inicializamos la semilla para generar números aleatorios
    srand(time(NULL));

    // Simulamos la infección
    simulateInfection(n);

    return 0;
}
